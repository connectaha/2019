{"version":3,"sources":["webpack:///templates/src/containers/Speakers.90c8859c.js","webpack:////Users/nate/code/connectaha/conf-page/node_modules/shuffle-array/index.js","webpack:////Users/nate/code/connectaha/conf-page/src/containers/Speakers.js"],"names":["webpackJsonp","253","module","exports","__webpack_require__","shuffle","arr","options","Array","isArray","Error","random","temp","collection","len","length","rng","Math","copy","slice","floor","pick","picks","index","push","splice","82","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_styledComponents","_styledComponents2","_reactStatic","_rebass","_shuffleArray","Clickable","styled","div","withConfig","displayName","withRouteData","_ref","speakers","createElement","Heading","pl","pt","pb","color","Flex","flexWrap","p","map","speaker","key","id","Box","width","height","Card","m","borderRadius","boxShadow","onClick","window","location","Image","src","photo","px","Text","fontSize","firstName","lastName"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YCKA,SAAAC,GAAAC,EAAAC,GAEA,IAAAC,MAAAC,QAAAH,GACA,SAAAI,OAAA,wCAGAH,QAEA,IAGAI,GACAC,EAJAC,EAAAP,EACAQ,EAAAR,EAAAS,OACAC,EAAAT,EAAAS,KAAAC,KAAAN,MAQA,MAJA,IAAAJ,EAAAW,OACAL,EAAAP,EAAAa,SAGAL,GACAH,EAAAM,KAAAG,MAAAJ,IAAAF,GACAA,GAAA,EACAF,EAAAC,EAAAC,GACAD,EAAAC,GAAAD,EAAAF,GACAE,EAAAF,GAAAC,CAGA,OAAAC,GAWAR,EAAAgB,KAAA,SAAAf,EAAAC,GAEA,IAAAC,MAAAC,QAAAH,GACA,SAAAI,OAAA,+CAGAH,QAEA,IAAAS,GAAAT,EAAAS,KAAAC,KAAAN,OACAW,EAAAf,EAAAe,OAAA,CAEA,oBAAAA,IAAA,IAAAA,EAAA,CAMA,IALA,GAGAC,GAHAT,EAAAR,EAAAS,OACAF,EAAAP,EAAAa,QACAR,KAGAW,GAAAR,GACAS,EAAAN,KAAAG,MAAAJ,IAAAF,GACAH,EAAAa,KAAAX,EAAAU,IACAV,EAAAY,OAAAF,EAAA,GACAT,GAAA,EACAQ,GAAA,CAGA,OAAAX,GAGA,MAAAL,GAAAW,KAAAG,MAAAJ,IAAAV,EAAAS,UAMAb,EAAAC,QAAAE,GDWMqB,GACA,SAAUxB,EAAQC,EAASC,GAEjC,YAuBA,SAASuB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GApBvFG,OAAOC,eAAe7B,EAAS,cAC7B8B,OAAO,GEnGT,IAAAC,GAAA9B,EAAA,GFwGI+B,EAAUR,EAAuBO,GEvGrCE,EAAAhC,EAAA,IF2GIiC,EAAqBV,EAAuBS,GE1GhDE,EAAAlC,EAAA,IACAmC,EAAAnC,EAAA,IACAoC,EAAApC,EAAA,KAEMqC,GF8Ged,EAAuBa,GE9G1BE,UAAOC,IAAnBC,YAAAC,YAAA,6CFsHN1C,GAAQ2B,SElHO,EAAAQ,EAAAQ,eAAc,SAAAC,GAAA,GAAGC,GAAHD,EAAGC,QAAH,OAEzBb,GAAAL,QAAAmB,cAAA,WACEd,EAAAL,QAAAmB,cAACV,EAAAW,SAAQC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,MAAM,SAApC,YACAnB,EAAAL,QAAAmB,cAACV,EAAAgB,MAAKC,SAAS,OAAOC,EAAG,IAEvBT,EAASU,IAAI,SAAAC,GAAA,MACXxB,GAAAL,QAAAmB,cAACR,GAAUmB,IAAKD,EAAQE,IACtB1B,EAAAL,QAAAmB,cAACV,EAAAuB,KAAIC,MAAO,IAAKC,OAAQ,KACvB7B,EAAAL,QAAAmB,cAACV,EAAA0B,MACCC,EAAG,GACHT,EAAG,EACHM,OAAQ,EAAG,EAAG,IACdI,aAAc,EACdC,UAAU,8BACVC,QAAS,WAAQC,OAAOC,SAAP,aAA+BZ,EAAQE,KACxD1B,EAAAL,QAAAmB,cAACV,EAAAiC,OAAMC,IAAKd,EAAQe,QACpBvC,EAAAL,QAAAmB,cAACV,EAAAuB,KAAIa,GAAI,GACPxC,EAAAL,QAAAmB,cAACV,EAAAqC,MAAKtB,MAAM,QAAQuB,SAAU,GAC3BlB,EAAQmB,WAEX3C,EAAAL,QAAAmB,cAACV,EAAAqC,MAAKtB,MAAM,QAAQuB,SAAU,GAC3BlB,EAAQoB","file":"templates/src/containers/Speakers.90c8859c.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 253:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Randomize the order of the elements in a given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Boolean} [options.copy] - Sets if should return a shuffled copy of the given array. By default it's a falsy value.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Array}\n */\nfunction shuffle(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var collection = arr,\n      len = arr.length,\n      rng = options.rng || Math.random,\n      random,\n      temp;\n\n  if (options.copy === true) {\n    collection = arr.slice();\n  }\n\n  while (len) {\n    random = Math.floor(rng() * len);\n    len -= 1;\n    temp = collection[len];\n    collection[len] = collection[random];\n    collection[random] = temp;\n  }\n\n  return collection;\n};\n\n/**\n * Pick one or more random elements from the given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Number} [options.picks] - Specifies how many random elements you want to pick. By default it picks 1.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Object}\n */\nshuffle.pick = function(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle.pick() expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var rng = options.rng || Math.random,\n      picks = options.picks || 1;\n\n  if (typeof picks === 'number' && picks !== 1) {\n    var len = arr.length,\n        collection = arr.slice(),\n        random = [],\n        index;\n\n    while (picks && len) {\n      index = Math.floor(rng() * len);\n      random.push(collection[index]);\n      collection.splice(index, 1);\n      len -= 1;\n      picks -= 1;\n    }\n\n    return random;\n  }\n\n  return arr[Math.floor(rng() * arr.length)];\n};\n\n/**\n * Expose\n */\nmodule.exports = shuffle;\n\n\n/***/ }),\n\n/***/ 82:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _styledComponents = __webpack_require__(20);\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nvar _reactStatic = __webpack_require__(39);\n\nvar _rebass = __webpack_require__(38);\n\nvar _shuffleArray = __webpack_require__(253);\n\nvar _shuffleArray2 = _interopRequireDefault(_shuffleArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Clickable = _styledComponents2.default.div.withConfig({\n  displayName: 'Speakers__Clickable'\n})(['cursor:pointer;']);\n\nexports.default = (0, _reactStatic.withRouteData)(function (_ref) {\n  var speakers = _ref.speakers;\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      _rebass.Heading,\n      { pl: 4, pt: 6, pb: 4, color: 'white' },\n      'Speakers'\n    ),\n    _react2.default.createElement(\n      _rebass.Flex,\n      { flexWrap: 'wrap', p: 32 },\n      speakers.map(function (speaker) {\n        return _react2.default.createElement(\n          Clickable,\n          { key: speaker.id },\n          _react2.default.createElement(\n            _rebass.Box,\n            { width: 280, height: 440 },\n            _react2.default.createElement(\n              _rebass.Card,\n              {\n                m: 16,\n                p: 2,\n                width: [1, 1, 1 / 2],\n                borderRadius: 8,\n                boxShadow: '0 0 16px rgba(0, 0, 0, .25)',\n                onClick: function onClick() {\n                  window.location = '/speakers/' + speaker.id;\n                } },\n              _react2.default.createElement(_rebass.Image, { src: speaker.photo }),\n              _react2.default.createElement(\n                _rebass.Box,\n                { px: 2 },\n                _react2.default.createElement(\n                  _rebass.Text,\n                  { color: 'black', fontSize: 4 },\n                  speaker.firstName\n                ),\n                _react2.default.createElement(\n                  _rebass.Text,\n                  { color: 'black', fontSize: 4 },\n                  speaker.lastName\n                )\n              )\n            )\n          )\n        );\n      })\n    )\n  );\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// templates/src/containers/Speakers.90c8859c.js","'use strict';\n\n/**\n * Randomize the order of the elements in a given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Boolean} [options.copy] - Sets if should return a shuffled copy of the given array. By default it's a falsy value.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Array}\n */\nfunction shuffle(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var collection = arr,\n      len = arr.length,\n      rng = options.rng || Math.random,\n      random,\n      temp;\n\n  if (options.copy === true) {\n    collection = arr.slice();\n  }\n\n  while (len) {\n    random = Math.floor(rng() * len);\n    len -= 1;\n    temp = collection[len];\n    collection[len] = collection[random];\n    collection[random] = temp;\n  }\n\n  return collection;\n};\n\n/**\n * Pick one or more random elements from the given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Number} [options.picks] - Specifies how many random elements you want to pick. By default it picks 1.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Object}\n */\nshuffle.pick = function(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle.pick() expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var rng = options.rng || Math.random,\n      picks = options.picks || 1;\n\n  if (typeof picks === 'number' && picks !== 1) {\n    var len = arr.length,\n        collection = arr.slice(),\n        random = [],\n        index;\n\n    while (picks && len) {\n      index = Math.floor(rng() * len);\n      random.push(collection[index]);\n      collection.splice(index, 1);\n      len -= 1;\n      picks -= 1;\n    }\n\n    return random;\n  }\n\n  return arr[Math.floor(rng() * arr.length)];\n};\n\n/**\n * Expose\n */\nmodule.exports = shuffle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/nate/code/connectaha/conf-page/node_modules/shuffle-array/index.js\n// module id = 253\n// module chunks = 2","import React from 'react'\nimport styled from 'styled-components'\nimport { withRouteData } from 'react-static'\nimport { Box, Card, Image, Flex, Text, Heading } from 'rebass'\nimport shuffle from 'shuffle-array'\n\nconst Clickable = styled.div`\n  cursor: pointer;\n`\n\nexport default withRouteData(({ speakers }) =>\n  (\n    <div>\n      <Heading pl={4} pt={6} pb={4} color=\"white\">Speakers</Heading>\n      <Flex flexWrap=\"wrap\" p={32}>\n        {\n        speakers.map(speaker => (\n          <Clickable key={speaker.id}>\n            <Box width={280} height={440}>\n              <Card\n                m={16}\n                p={2}\n                width={[1, 1, 1 / 2]}\n                borderRadius={8}\n                boxShadow=\"0 0 16px rgba(0, 0, 0, .25)\"\n                onClick={() => { window.location = `/speakers/${speaker.id}` }}>\n                <Image src={speaker.photo} />\n                <Box px={2}>\n                  <Text color=\"black\" fontSize={4}>\n                    {speaker.firstName}\n                  </Text>\n                  <Text color=\"black\" fontSize={4}>\n                    {speaker.lastName}\n                  </Text>\n                </Box>\n              </Card>\n            </Box>\n          </Clickable>)\n        )\n      }\n      </Flex>\n    </div>)\n)\n\n\n\n// WEBPACK FOOTER //\n// /Users/nate/code/connectaha/conf-page/src/containers/Speakers.js"],"sourceRoot":""}