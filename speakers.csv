"firstName","lastName","title","organization","description"
"Paul","Gower","Overcoming Delay: How The Best Developers Increase Productivity","Lunamark","In the software industry, it’s common to be on a project with an aggressive timeline.  Even if the schedule was correct, plans don't always go the way you expect and become off track. Teams end up working more extended hours, try to add people to the project or make other heroic efforts to try and “save the day’ and finish on time.  In my experience, rarely have those efforts worked and when it did, the team was so burned out it took several weeks to get motivated to tackle another project.

There should be a better way to complete projects on time, so teams feel a sense of accomplishment and are excited to take on the next project. In this session, we discuss three key behaviors you can do with your team, unlocking a better way to work to help the team succeed.
"
"Sandi","Barr","NgRx: Redux-style State Management in Angular","PRX","We’ve heard that using TypeScript can help us avoid painful bugs programmers commonly run into when writing JavaScript by type-checking our code. One of purposes of TypeScript is to “statically identify constructs that are likely to be errors”. With NgRx we can take advantage of this type safety by using TypeScript classes as action creators with readonly type properties, so we can then infer the action object types in our state management code.

NgRx provides a structuring mechanism for larger applications; it's a design pattern teaches you how to think. In this pattern, the developer needs to identify the streams of values the application is interested in and how they are combined to produce meaningful information for the view layer. The streams, the various applications states, and the view layer models are what we are setting out to define when we use Redux-style state management. This talk will show how to use the various NgRx reactive libraries for Angular state management to build out our application streams and then consume them in our components and services.
"
"Jeremy","Clark","Becoming a Social Developer: A Guide for Introverts","","This is NOT a highly-interactive workshop. Now that you feel a bit safer, make the most of your time here: talk to other developers. This is easy -- and incredibly terrifying. A few simple steps (and a bit of bravery) is all that it takes to get started. Building your developer network will boost your knowledge, your skills, and your career. Can an introvert become a social developer? YES! And we can do this while staying true to ourselves."
"Patrick","Wolff","Grow The Future With Internship 2.0","Farm Credit Services of America","Farm Credit Services of America has a different take on what an Internship experience should be. We took the idea of an Internship, and made it AWESOME! The Intern Program is team based, and allows a small group of software development students to work together on a team along with four or five full-time mentors and leaders to create a greenfield enterprise application. The experience allows the students to iterate through the full software development life cycle in an enterprise environment: from sketching out wire-frames to deploying an enterprise application in Production. 

We will also talk through how we do our intern interviews differently. Our interviews do not consist of the traditional sit-down interview with questions. We have a fun and relaxed process that let's the candidates express their creativity, collaboration, problem solving, and their personality. This helps to insure that we are investing in people that fit our culture.

One of the greatest benefits to our approach is that the students get an experience of what life is like in the real world. The amount of learning that happens when you apply the theory that's been learned in school across the entirety of the software development life-cycle in highly-collaborative enterprise team environment is indescribable. "
"Thomas","Cleberg","Model Management: The Least You Can Do","Mutual of Omaha","Data science projects are most visible right after initial delivery, but the data science team’s responsibility goes far beyond that. This talk introduces the basics of ModelOps, Model Lifecycle Management, an operational model for data science team work products, and common open-source tools for achieving a minimum level of transparency, reproducibility, and risk management for those produces."
"Javier","Lozano",".NET Yesterday, Today, and Tomorrow","Lozanotek, Inc.","Trying to make sense of .NET Core and .NET Standard? Looking for ways to reuse your current .NET Framework code? In this session we will cover how you can take your existing .NET Framework code and reuse it in your .NET Standard/Core applications with ease."
"Michelle","Mras","Why Do They Do That?","Mras Inc","This fun and eye-opening activity will truly unleash participates views of themselves and those they interact with. Participants learn their basic behavior style and how to better communicate to other behavior styles through the use of BANKCODE. Audiences laugh, bond and quickly realize why miscommunications occurred within past interactions and how to avoid them problems in the future. Together, they learn how to clearly communicate with each other. They receive immediate validation of what is being taught through confirmation from the other behavior groups. "
"Simon","Yost","Closing the Fidelity Gap with UI Engineering","Slalom Consulting","In 2018 the US market for digital transformation was $437 billion which reflects 16.8% growth year-over-year (Shirer & Smith, 2017). Simultaneously, two-thirds of all business leaders believe that their companies must pick up the pace of digitalization to remain competitive (Moore, 2017). Yet, even with this demand, teams implement solutions that lack of agility. Tangoe’s Murray lays it out: “Developers are coding to specific spec sheets with little conceptual understanding of how this button or feature fits within the overall user experience.”

The lack of agility and conceptual understanding of the whole results in a gap—the fidelity gap—where the marriage design and engineering is not as strong as the product creators intended. Symptoms may include a lack of consistency, responsiveness, navigation, and accessibility (Abramov, 2018).

Join Simon Yost to explore filling the fidelity gap with stack-neutral concepts and practices that engineering and design teams can work together to champion on any stack."
"Cassandra","Faris","Health: The Most Important Dev Tool","","Working in the tech industry often involves spending long hours sitting down, staring at a screen, consuming copious amounts of pizza and caffeine. The work is mentally demanding and can be stressful. In the rush to get everything done, it can be easy to neglect our health. But a healthy body and mind are necessary for effective performance. Based on HR training, research, and personal experience, this session provides realistic suggestions for managing your well-being at work. It covers the connection between physical and mental health, as well as how to discuss these topics with your employer. You’ll leave with a better idea of how to take care of yourself and be a happier, healthier, more productive person."
"Chris","DeMars","I Can't See: Low Vision A11Y & Users","United Shore","When you think of low vision, what comes to mind? A user that is near sighted? How about far sighted? Maybe partially blind? These are all qualifying cases of poor vision, but low vision is more complicated than the prescription of glasses or contacts.

According to the World Health Organization, they categorize low vision based on specific levels of visual acuity and field of vision (W3.org, 2016). With that in mind, we as developers can look at different categories of low vision including color vision, visual acuity, contrast sensitivity, etc and make an effort to bake in things like zoom, non-conflicting colors, and re-wrapping of columns in to our code.

My talk will cover what vision accessibility is, different categories of low vision, what the needs of the users are, and what we as developers can do to achieve a great user experience for low vision users."
"Greg","Dick","Inverting the Management Relationship","Hudl","In most manager/employee relationships, the employee is a resource for the manager. The manager has a goal, something they are responsible for, and the employee is helping them to meet their goal. When it goes well, the manager is also providing feedback and coaching that helps the employee improve and grow their career. When it doesn't go well, the manager's goals trump the needs of the employee, and the employee must sink or swim. Often times, these two dynamics are at odds with each other and can even put the manager in a difficult position.
At Hudl, we took a different approach. We used a form a matrix management where managers don't typically work on the same team as their reports. We removed the delegating aspect from management, and this led to a completely different dynamic in the manager/report relationship. It actually inverted the relationship where it is now clear that the manager is a resource for the report. Our managers focus their efforts on coaching and growing the skills of their reports. Our successes are seeing our reports meet their goals. 
This dynamic provides an interesting mix of pros and cons. I'll talk through those as well as the logistics of running a product team with this structure. My goal is for anyone in a more traditional org structure to start thinking about the benefits of changing up their structure."
"Charlie","Koster","AI Doesn't Have to Be Hard","Aviture","Artificial Intelligence can be an intimidating topic to approach. You might be thinking that it’s a topic perhaps better handled by academia or tech giants like Google.. Nonsense! In this talk we will explore some of the lesser known AI algorithms including Markov Chains, Genetic Algorithms, and K-Means clustering in a beginner friendly way. By the end of this talk you'll be armed with the knowledge to write your own AI solutions and you'll recognize the kinds of business problems that are suited for each technique."
"Dustin","Collins","Build your Brand (or someone else will do it for you)","Wallaby Consulting","For this presentation I will share some proven strategies that empower software makers. Branding seems to be a real blind spot for many software engineers. As an engineer myself, I know that often we focus on a solution when the problem is not yet clear. The problem, or opportunity, is to develop and maintain a satisfying career in the future of software. As you face failure and success over and over again, how you react is a big part of your personal brand. The areas you focus on and projects you attach yourself to are also a part of that brand. Don't let someone else be your puppet master, pull your own strings."
"Katia","Wheeler","Thinking About React, Atomically","Balance Innovations","Atomic Design is the concept of breaking down user interfaces into smaller, simpler elements. There are five different levels in atomic design: atoms, molecules, organism, templates, and pages. These levels are combined to make user interfaces.

React, at its core, follows Atomic Design inherently by encouraging developers to keep components as simple and as broken down as possible. From this simplicity, we can create more complex components and containers of components to create the user interfaces for our applications. Following these patterns gives us, as developers, an easy to manage (and test) ecosystem within our React applications.

During this talk, we'll dive into the roots of Atomic Design and how we can apply these design principles to our React applications."
"Mike","Hostetler","Python for the Curious","Object Partners, Inc","Python is used in many applications today and yet some people seem mystified by it. Maybe it's the whitespace, maybe it's dynamic typing, maybe it's because it seems... too clean looking. Yet Python is useful for one-off scripts and for full-blown web applications (just ask Instagram or Pinterest). And Python is becoming the de facto language in many data science applications. We will touch on all this, show some examples, and make fun of ""enterprise"" languages as we look at a simple, yet powerful, language."
"Michael","Eaton","Leadership Journey: From Software Developer to Leader","Matched Pattern","You’ve spent years working on your technical skills and can write code with the best of them. Then, one day, a leadership position opens up on your team, and you start thinking about it. Should I or shouldn’t I? What if I hate it? What if I love it? What if I'm not that good at it? In this interactive session, we’ll explore “why leadership,” answer some hard questions, and talk about one developer’s path from writing code to leading people."
"Jason","Swett","Using Tests as a Tool to Wrangle Legacy Projects","","Most code in the world is legacy code. Legacy projects tend to be lacking in test coverage. Unfortunately, legacy projects are often written in such a way that it makes it difficult to add tests - tests that are badly needed in order to start paying down technical debt and get the project on the right track.

Fortunately there are some effective ways of wrangling legacy code into submission. If we can break apart a legacy project's entanglement of dependencies, making the code more modular and loosely coupled, we can add tests more easily. But breaking apart dependencies is tricky and requires a few certain techniques in order to be done safely.

Main points:

- Why legacy projects are harder to test than greenfield projects
- Why adding tests to legacy projects is risky
- How to mitigate the risks of modifying legacy code
- What dependency injection is, why it’s useful in testing legacy projects, and how to use it
- How to break dependencies using Michael Feathers’ “sprout class” technique"
"Kathy I. Andersen & Nicholas","Tuck","Stop, Collaborate and Listen","Proxibid ; Hudl","Remember back to the BEST work you’ve ever done with a team of people. There was room for creativity, there was open & free-wheeling dialogue, and a real sense of excitement to dig into the work. Why did it go so well? Because the foundations were in place to make working in concert possible. We’re going to tell you how to recreate that wherever you are right now.

Teams accomplish more than individuals. We need to maximize that work using more interesting, creative and most importantly effective solutions to collaborating. Join for a deep dive on how and when to apply a host of techniques."
"Ash","Banaszek","Fear, Pain, and Loathing: Empathizing with your Users' Plight","Union Pacific","You're a developer given a relatively straightforward assignment: replace an old application with a new technology. ""Make it easy to use... Make it sharp! Oh, and don't change anything.""

This session discusses the basics of user interface usability from a user's perspective. When your application is live, the user is the person who will be using that system day in and day out. They determine your application's success or failure by adopting, undermining, or abandoning your application. With such importance, it is imperative to have some understanding of your users' requirements, constraints, and goals. This session will help you develop skills to build empathy and better communicate with your users, while also meeting the needs and requirements of your project stakeholders."
"Jeff","Fritz","Zero to Community Hero - Start Live Coding on Twitch","Microsoft","You're at a conference, and learning a ton. That's awesome, but how do you continue learning after the event? Let's break out of just socializing and learning from the folks in our local geographic area, and embrace a more global community using the Twitch live video platform to write code, discuss technology topics, and even broadcast local user-groups. 
We'll go beyond just playing Fortnite or League of Legends, and talk about hosting educational content on Twitch. Join one of the leaders of this movement, Jeff Fritz as he gives you an inside look at how to get started streaming, participating, and building new communities with online video"
"Michael K","Perdunn","What can Escape Rooms teach us about Cybersecurity?","","The popularity of Escape Rooms have exploded. In the past four years, they have grown by an astounding 1000%. The premise is simple, a group has 60 minutes to search for clues, put those clues together correctly to solve puzzles, and successfully escape. When Cybersecurity teams respond to an incident, they have a limited amount of time to search through alerts and logs to find clues, put them together correctly to determine the impact, and respond successfully defend to their company from breach. Given the stress of the situation, many teams make mistakes and fail. Applying some simple principles, incident response can be dramatically improved. This interactive presentation will guide participants through the theory behind games such as escape rooms and the proven techniques for solving them. Then we will apply those to Cybersecurity teams through some great stories of incident response success and failures."
"Alison","Hawke","A Hero's Journey: Manual Tester to Automation QA","WWT Asynchrony Labs","**Prologue: Once Upon A Time in Software**
 
Once there was a project that was frustrating, it had lots of bugs and made the team unhappy. For the next project, we tried something new: the QA on the team would learn C# and she would write automated tests before the developers started coding. The team was happy, and the app runs to this day with only bugs caused by bad data the client told us could never exist. 

The end. Or is it really... The Beginning?

This talk is the story of a learning quest, what I've discovered along the way teaching QAs to write test automation in Java, C#, and JavaScript, and my own journey of picking up new languages for fun, like Elixir. It is aimed at QA testers who want to broaden their testing skills, and at developers who want to help them get there. No prior coding knowledge is required for the QAs."
"Cameron","Presley","How Functional Programming Made Me A Better Developer","SentryOne","With the rise in popularity recently, functional programming has become ""The Next Big Thing"". As of today, there are tons of frameworks and tools that can be used to for front-end, back-end, desktop, and mobile development. With that being said, the majority of us are still using object-oriented languages for our day jobs and don't need to learn functional programming, right?

In this talk, I'll walk you through my experiences learning functional programming over the last year, how my style of programming has changed, and now how I think about programming with regards to both functional and object-oriented paradigms"
"Arthur","Doler","How to Work with People: A Guide to Playing Nicely with Others","Aviture","Humans. No matter what we might wish, we have to work with them to get stuff done. Unfortunately, when we join a team it doesn’t come with a manual. Figuring out how to get things done and get everyone pulling in the same direction can be a nightmare.

But it doesn’t have to be! In this example-driven talk you’ll learn what a personality type is, you’ll learn some methods for communicating better with others, and you’ll dip a toe into the psychology of team dynamics - all without having to read a huge textbook or a bunch of manager-focused books trying to sell you something. You’ll come away with tools you can use to be a better teammate and to create a stronger team, regardless of your role. Let’s get started actually working together!"
"John Henry","Müller","From Color Palette to Color System","","Color touches literally every pixel of digital products. That's why it is so important to get color right in a design system.

In this talk, John Henry Müller (Design Director at Hudl) divulges mistakes made and practical lessons learned about color while creating Uniform, Hudl's design system.

What you'll learn:

* Tips and tricks creating a durable color scheme 
* Common pitfalls when defining a color palette
* Understand color contrast for accessibility "
"Beth","Laing","You're Hired! Avoiding missteps and false starts in your new job","Women Who Code, Atlanta","Congratulations on your new job... now what! Starting a new job, especially if it’s your first one, is always exciting... and stressful. Here’s how to take control of the situation and make sure that you’re ready to start strong from day one. As superficial as it sounds, you want to look your best when you are meeting so many people for the first time. But you should dress appropriately for your environment - a suit would be out of place in most technical organizations. The what not to wear part is easy… but what should you wear? Getting the people part right is key.First, ask a lot of questions. Use the 70/30 rule -- ask questions 70% of the time and share your stories and ideas 30% of the time. This is your chance to learn about the company, your project and the people that you will be working with, so you want to spend most of your time listening. Be ready with a plan for getting up-to-speed, even if all the parts are not in place when you start. Chances are your accounts and access might not be fully functional from day one, so be ready with things to do in the meantime. You’ll leave with a checklist of things to do so you walk in the door on day one ready to go."
"Courtney","Heitman","Mapping the User's Journey","Gallup","Do you feel like you don't actually know your users? Do they struggle through the flow of your website, and you don’t know why? 

This session will introduce you to empathy mapping, and how it will help you to relate to your users better. Once we have some empathy (mapping), we'll go over user journey mapping, so we can better understand what questions and pain points our users are having as they move through our site."
"Jonathan","Mills","","Epiq Global",""
"Jeff","Strauss","","World Wide Technology",""